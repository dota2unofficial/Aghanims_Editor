export default {
  "Ability1": "Adds an ability to this unit when it is spawned. Depending on the unit's baseclass, this ability might be automatically leveled, or not. Abilities can be added or removed during the game's flow, but units can never have more than 32 abilities.",
  "Ability2": "Adds an ability to this unit when it is spawned. Depending on the unit's baseclass, this ability might be automatically leveled, or not. Abilities can be added or removed during the game's flow, but units can never have more than 32 abilities.",
  "Ability3": "Adds an ability to this unit when it is spawned. Depending on the unit's baseclass, this ability might be automatically leveled, or not. Abilities can be added or removed during the game's flow, but units can never have more than 32 abilities.",
  "Ability4": "Adds an ability to this unit when it is spawned. Depending on the unit's baseclass, this ability might be automatically leveled, or not. Abilities can be added or removed during the game's flow, but units can never have more than 32 abilities.",
  "Ability5": "Adds an ability to this unit when it is spawned. Depending on the unit's baseclass, this ability might be automatically leveled, or not. Abilities can be added or removed during the game's flow, but units can never have more than 32 abilities.",
  "Ability6": "Adds an ability to this unit when it is spawned. Depending on the unit's baseclass, this ability might be automatically leveled, or not. Abilities can be added or removed during the game's flow, but units can never have more than 32 abilities.",
  "Ability7": "Adds an ability to this unit when it is spawned. Depending on the unit's baseclass, this ability might be automatically leveled, or not. Abilities can be added or removed during the game's flow, but units can never have more than 32 abilities.",
  "Ability8": "Adds an ability to this unit when it is spawned. Depending on the unit's baseclass, this ability might be automatically leveled, or not. Abilities can be added or removed during the game's flow, but units can never have more than 32 abilities.",
  "Ability9": "Adds an ability to this unit when it is spawned. Depending on the unit's baseclass, this ability might be automatically leveled, or not. Abilities can be added or removed during the game's flow, but units can never have more than 32 abilities.",
  "Ability10": "Adds an ability to this unit when it is spawned. Depending on the unit's baseclass, this ability might be automatically leveled, or not. Abilities can be added or removed during the game's flow, but units can never have more than 32 abilities.",
  "Ability11": "Adds an ability to this unit when it is spawned. Depending on the unit's baseclass, this ability might be automatically leveled, or not. Abilities can be added or removed during the game's flow, but units can never have more than 32 abilities.",
  "Ability12": "Adds an ability to this unit when it is spawned. Depending on the unit's baseclass, this ability might be automatically leveled, or not. Abilities can be added or removed during the game's flow, but units can never have more than 32 abilities.",
  "Ability13": "Adds an ability to this unit when it is spawned. Depending on the unit's baseclass, this ability might be automatically leveled, or not. Abilities can be added or removed during the game's flow, but units can never have more than 32 abilities.",
  "Ability14": "Adds an ability to this unit when it is spawned. Depending on the unit's baseclass, this ability might be automatically leveled, or not. Abilities can be added or removed during the game's flow, but units can never have more than 32 abilities.",
  "Ability15": "Adds an ability to this unit when it is spawned. Depending on the unit's baseclass, this ability might be automatically leveled, or not. Abilities can be added or removed during the game's flow, but units can never have more than 32 abilities.",
  "Ability16": "Adds an ability to this unit when it is spawned. Depending on the unit's baseclass, this ability might be automatically leveled, or not. Abilities can be added or removed during the game's flow, but units can never have more than 32 abilities.",
  "Ability17": "Adds an ability to this unit when it is spawned. Depending on the unit's baseclass, this ability might be automatically leveled, or not. Abilities can be added or removed during the game's flow, but units can never have more than 32 abilities.",
  "Ability18": "Adds an ability to this unit when it is spawned. Depending on the unit's baseclass, this ability might be automatically leveled, or not. Abilities can be added or removed during the game's flow, but units can never have more than 32 abilities.",
  "Ability19": "Adds an ability to this unit when it is spawned. Depending on the unit's baseclass, this ability might be automatically leveled, or not. Abilities can be added or removed during the game's flow, but units can never have more than 32 abilities.",
  "Ability20": "Adds an ability to this unit when it is spawned. Depending on the unit's baseclass, this ability might be automatically leveled, or not. Abilities can be added or removed during the game's flow, but units can never have more than 32 abilities.",
  "Ability21": "Adds an ability to this unit when it is spawned. Depending on the unit's baseclass, this ability might be automatically leveled, or not. Abilities can be added or removed during the game's flow, but units can never have more than 32 abilities.",
  "Ability22": "Adds an ability to this unit when it is spawned. Depending on the unit's baseclass, this ability might be automatically leveled, or not. Abilities can be added or removed during the game's flow, but units can never have more than 32 abilities.",
  "Ability23": "Adds an ability to this unit when it is spawned. Depending on the unit's baseclass, this ability might be automatically leveled, or not. Abilities can be added or removed during the game's flow, but units can never have more than 32 abilities.",
  "Ability24": "Adds an ability to this unit when it is spawned. Depending on the unit's baseclass, this ability might be automatically leveled, or not. Abilities can be added or removed during the game's flow, but units can never have more than 32 abilities.",
  "Ability25": "Adds an ability to this unit when it is spawned. Depending on the unit's baseclass, this ability might be automatically leveled, or not. Abilities can be added or removed during the game's flow, but units can never have more than 32 abilities.",
  "Ability26": "Adds an ability to this unit when it is spawned. Depending on the unit's baseclass, this ability might be automatically leveled, or not. Abilities can be added or removed during the game's flow, but units can never have more than 32 abilities.",
  "Ability27": "Adds an ability to this unit when it is spawned. Depending on the unit's baseclass, this ability might be automatically leveled, or not. Abilities can be added or removed during the game's flow, but units can never have more than 32 abilities.",
  "Ability28": "Adds an ability to this unit when it is spawned. Depending on the unit's baseclass, this ability might be automatically leveled, or not. Abilities can be added or removed during the game's flow, but units can never have more than 32 abilities.",
  "Ability29": "Adds an ability to this unit when it is spawned. Depending on the unit's baseclass, this ability might be automatically leveled, or not. Abilities can be added or removed during the game's flow, but units can never have more than 32 abilities.",
  "Ability30": "Adds an ability to this unit when it is spawned. Depending on the unit's baseclass, this ability might be automatically leveled, or not. Abilities can be added or removed during the game's flow, but units can never have more than 32 abilities.",
  "Ability31": "Adds an ability to this unit when it is spawned. Depending on the unit's baseclass, this ability might be automatically leveled, or not. Abilities can be added or removed during the game's flow, but units can never have more than 32 abilities.",
  "Ability32": "Adds an ability to this unit when it is spawned. Depending on the unit's baseclass, this ability might be automatically leveled, or not. Abilities can be added or removed during the game's flow, but units can never have more than 32 abilities.",
  "AbilityBehavior": "Determines an ability's casting behavior (unit target, ground target, etc). Refer to DOTA_ABILITY_BEHAVIOR for values which can be used.",
  "AbilityCastAnimation": "Determines an ability's cast animation (e.g. ACT_DOTA_CAST_ABILITY_2). Plays no animation if the caster unit's model does not have the specified animation.",
  "AbilityCastPoint": "The amount of time it takes for an ability to fully finish casting, after the caster is in range of the target, and facing it (if applicable).",
  "AbilityCastRange": "The ability's base cast range. Use 0 for global cast range abilities. Hovering over the ability will show a green circle around the caster with a radius equal to this value, plus any cast range modifiers.",
  "AbilityCastRangeBuffer": "The maximum distance the ability's target can move beyond the cast range, during the ability's cast point, without the ability being cancelled. Usually 0 (infinite).",
  "AbilityChannelAnimation": "The animation played by the caster during the spell's channeling duration. Plays no animation if the caster unit's model does not have the specified animation. Channeling only starts after a spell has been registered as cast, meaning this plays after AbilityCastAnimation.",
  "AbilityChannelTime": "The maximum amount of time a spell can be channeled for. Can be interrupted prematurely by enemy disables or by the caster unit.",
  "AbilityChargeRestoreTime": "The amount of time, in seconds, it takes for an ability's charges to restore. Affected by cooldown reduction. Typically requires the ability's cooldown to be 0 to work.",
  "AbilityCharges": "The maximum amount of charges an ability can hold. Charge-based abilities can be cast without any cooldown, by spending a charge, and up to this amount of charges can be accumulated over time.",
  "AbilityCooldown": "The time it takes for this ability to be available to cast again, after being used. Affected by cooldown reduction.",
  "AbilityDamage": "Damage dealt by the ability. Not recommended, use an AbilitySpecial field instead.",
  "AbilityDuration": "The ability's duration. Not recommended, use an AbilitySpecial field instead.",
  "AbilityManaCost": "The ability's mana cost. Can only be cast if the caster has at least this amount of mana. Affected by manaloss/mana cost reduction.",
  "AbilitySharedCooldown": "The ability's shared cooldown group. Use the same value on this field for abilities which should share a cooldown, such as Necronomicon 1/2/3 or Dagon 1-5.",
  "AbilitySpecial": "The ability's key special values, e.g. duration, effect radius, damage... These are not automatically used in your ability - you must tell the game how to use them in your ability's code - but they can be referenced directly on the ability's tooltip, and are automatically formatted based on the ability's current and maximum level if you use spaces to separate each level's corresponding value.",
  "AbilityTextureName": "The ability's icon. Should be a power of 2 square PNG image, preferably 128x128 or 256x256, kept in the resources/spellicons folder.",
  "AbilityType": "Can be DOTA_ABILITY_TYPE_BASIC for regular abilities or DOTA_ABILITY_TYPE_ULTIMATE for ultimates.",
  "AbilityUnitDamageType": "Can be DAMAGE_TYPE_MAGICAL, DAMAGE_TYPE_PHYSICAL, DAMAGE_TYPE_PURE, or DAMAGE_TYPE_NONE. Causes the ability's tooltip to include a 'damage type' field with the specified type and the appropriate formatting. Only affects the ability's tooltip, unless GetAbilityDamageType() is used (which is encouraged).",
  "AbilityUnitTargetFlags": "Specifies any special flags which affect this ability's targeting, such as only affecting visible enemy units, or only those with mana. See DOTA_UNIT_TARGET_FLAGS for the full list of possible flags. Only affects the ability's tooltip, unless GetAbilityTargetFlags() is used (which is encouraged).",
  "AbilityUnitTargetTeam": "Specifies which team is affected by this ability. See DOTA_UNIT_TARGET_TEAM for the full list of team references. Only affects the ability's tooltip, unless GetAbilityTargetTeam() is used (which is encouraged).",
  "AbilityUnitTargetType": "Specifies which unit types are affected by this ability. See DOTA_UNIT_TARGET_TYPE for the full list of unit types. Only affects the ability's tooltip, unless GetAbilityTargetType() is used (which is encouraged).",
  "AllowedInBackpack": "Specifies if an item can be backpacked or not. 1 for true, 0 for false.",
  "AnimationIgnoresModelScale": "Normally, ability cast animations are played slower on larger models. If this field is set to 1 (true), it will cause this ability's cast animation to play at the same speed for any model size.",
  "AnimationPlaybackRate": "Defines the speed at which the specified cast animation will play during this ability's cast point. 1.0 is 100% speed, 2.0 is 200%, etc.",
  "AOERadius": "If this ability has the DOTA_ABILITY_BEHAVIOR_AOE behavior, its targeting reticule will have a radius defined by this field. You can use values from the AbilitySpecial field here by using the % character, e.g. %my_ability_radius%.",
  "ArmorPhysical": "This unit's base armor value, before any other modifiers. Armor reduces physical damage taken by this unit.",
  "AttackAcquisitionRange": "The range within which units will search for valid attack targets whenever an attack-move order is given, or when they are idle and have autoattack behavior enabled.",
  "AttackAnimationPoint": "The base time it takes after a unit starts its attack for it to actually register. If the unit is melee, this is the moment when the target will take damage from its attacks; if it is ranged, it is the moment when the attack's projectile will be launched. This time is sped up (or slowed down) by the unit's attack speed.",
  "AttackCapabilities": "DOTA_UNIT_CAP_MELEE_ATTACK for melee units, DOTA_UNIT_CAP_RANGED_ATTACK for ranged units, DOTA_UNIT_CAP_NO_ATTACK for units who cannot attack. Keep in mind this only controls whether a unit's attacks are projectile-based (ranged) or instant (melee); attack range has nothing to do with being melee or ranged. Melee units' attacks will automatically miss their target if it is more than 350 units farther than their attack range when the attack actually connects.",
  "AttackDamageMax": "This unit's maximum base damage roll. Actual attack damage is a random value between this and the unit's minimum base damage, plus any other relevant modifiers.",
  "AttackDamageMin": "This unit's minimum base damage roll. Actual attack damage is a random value between this and the unit's maximum base damage, plus any other relevant modifiers.",
  "AttackDesire": "A normalized value representing how much bots want to attack this unit compared to others. Only useful when dealing with vanilla AI scripts.",
  "AttackRange": "This unit's base attack range. This field's value doesn't change the fact that a unit is melee or ranged, but melee heroes usually have 150 attack range.",
  "AttackRangeActivityModifiers": "Lists a series of animation modifiers, automatically used whenever a specific attack's range exceeds each listed value. e.g. 'attack_normal' '0', 'attack_long_range' '250' would cause a unit's attack animation to use the 'attack_long_range' modifier for attacks from further away than 250 range, and the 'attack_normal' modifier for any others.",
  "AttackRangeBuffer": "The maximum distance by which a target can exceed this unit's attack range before a initiated attack gets canceled. 250 for most units.",
  "AttackRate": "The base time it takes before this unit can start a new attack, counting from the start of the previous one. Also called BAT, or Base Attack Time. The actual time between attacks is also influenced by the unit's current attack speed.",
  "AttackSpeedActivityModifiers": "Lists a series of animation modifiers, automatically used whenever the unit's attack speed exceeds the listed values. e.g. 'attack_normal' '0', 'attack_fast' '300' would cause a unit's attack animation to use the 'attack_fast' modifier when it has over 300 attack speed, and the 'attack_normal' modifier in any other situation.",
  "AttributeAgilityGain": "The amount of agility a hero gains when gaining a level. Ignores fractions smaller than 0.1. Final attribute values are always rounded down.",
  "AttributeBaseAgility": "The amount of agility a hero starts with at level 1.",
  "AttributeBaseIntelligence": "The amount of intelligence a hero starts with at level 1.",
  "AttributeBaseStrength": "The amount of strength a hero starts with at level 1.",
  "AttributeIntelligenceGain": "The amount of intelligence a hero gains when gaining a level. Ignores fractions smaller than 0.1. Final attribute values are always rounded down.",
  "AttributePrimary": "DOTA_ATTRIBUTE_STRENGTH for strength, DOTA_ATTRIBUTE_AGILITY for agility, DOTA_ATTRIBUTE_INTELLECT for intelligence. Only relevant for units with the npc_dota_hero baseclass, a.k.a. heroes.",
  "AttributeStrengthGain": "The amount of strength a hero gains when gaining a level. Ignores fractions smaller than 0.1. Final attribute values are always rounded down.",
  "AutoAttacksByDefault": "Specifies if a unit's default behavior includes autoattacking when idle. 1 for true, 0 for false.",
  "BaseAttackSpeed": "The base amount of attack speed a unit starts with. Keep in mind this does not affect BAT (base attack time). This value is 100 for most units.",
  "BaseClass": "A base class could be considered the unit's 'type'. It specifies the way several game elements interact with it, for example, determining if it is affected or targeted by abilities and attacks. Examples of base classes are npc_dota_creature (used for any generic creep), npc_dota_building (for buildings), or npc_dota_thinker (for dummy units).",
  "Bot": "A field which specifies hero bot behaviors such as laning desires and item builds. Only useful when dealing with vanilla AI scripts.",
  "BotImplemented": "Specifies if a hero has proper bot logic configured for it. Only useful when dealing with vanilla AI scripts.",
  "BoundsHullName": "Specifies a unit's pathing and collision radius. Refer to DOTA_HULL_SIZE for a list of possible values.",
  "BountyGoldMax": "The maximum amount of gold this unit can grant to its killer. The actual gold given is a random value between this and the minimum bounty.",
  "BountyGoldMin": "The minimum amount of gold this unit can grant to its killer. The actual gold given is a random value between this and the maximum bounty.",
  "BountyXP": "A unit's experience bounty. This value is equally split among any allies of the killer in 1500 range, or any heroes in 1500 range in the case of neutral creeps. If the unit was denied, only a fraction of the regular experience is awarded. Heroes do not follow these rules or use this field at all.",
  "CanBeDominated": "Specifies whether a unit can be dominated by Chen's Holy Persuasion, Enchantress' Enchant, Helm of the Dominator, and similar abilities. Only relevant for certain creep baseclasses.",
  "CombatClassAttack": "Specifies a unit's attack damage type. Certain attack types deal increased or reduced damage to certain armor types. Valid types are DOTA_COMBAT_CLASS_ATTACK_BASIC, DOTA_COMBAT_CLASS_ATTACK_HERO, DOTA_COMBAT_CLASS_ATTACK_PIERCE, and DOTA_COMBAT_CLASS_ATTACK_SIEGE.",
  "CombatClassDefend": "Specifies a unit's armor type. Certain attack types deal increased or reduced damage to certain armor types. Valid types are DOTA_COMBAT_CLASS_DEFEND_BASIC, DOTA_COMBAT_CLASS_DEFEND_HERO, and DOTA_COMBAT_CLASS_DEFEND_STRUCTURE.",
  "Complexity": "Roughly specifies a hero's abilities and playstyle complexity. Only affects Valve's vanilla pick screen complexity indicator.",
  "ConsideredHero": "Specifies if this unit is a creep-hero, a creep who is affected by some abilities and mechanics as if it was a hero. When true, the unit uses the hero health bar, which is larger and more detailed.",
  "Creature": "A data block which specifies the amount of health, damage, armor, etc. Gained by a creature when leveling up, as well as its basic behavior when using basic creep AI. Only relevant for the npc_dota_creature baseclass and any who inherit from it.",
  "DrawParticlesWhileHidden": "A property that allows visible particles to be drawn on 'hidden' units. Useful for some dummies and units without a model.",
  "FollowRange": "The default distance at which this unit will trail behind another when set to follow it by move-clicking.",
  "GameSoundsFile": "The sound file which should be loaded when this unit is spawned. Prefer using proper precaching, as this field is unreliable at best.",
  "HasAggressiveStance": "Specifies whether a unit should switch to a different animation when near enemies. The unit's model must have the appropriate animation for this field to work.",
  "HasInventory": "Specifies whether this unit has an inventory. Certain baseclasses are not compatible with inventories.",
  "HasScepterUpgrade": "Specifies whether this ability can be upgraded by Aghanim's Scepter. Setting this to 1 (true) will cause the ability's aghanim_description string to be shown on its tooltip with the proper formatting for scepter abilities.",
  "HealthBarOffset": "Specifies how many units above this unit's head should its health bar be positioned. Usually 200 for heroes, and 150 or 200 for most other small (i.e. non-building) units.",
  "HeroID": "A unique number tied to each dota 2 hero. Do not use one of the vanilla heroes' established IDs, or conflicts may arise. Snapfire's hero ID, 128, is the highest one as of July/2020.",
  "ID": "This ability's unique ID. Do not use an existing one, or the ability's tooltip will be mixed up with another one.",
  "IdleSoundLoop": "A sound that constantly plays, looping, while this unit is alive.",
  "IgnoreAddSummonedToSelection": "When 1 (true), this unit will ignore the automatic summon selection on spawn player setting.",
  "ImmuneToOmnislash": "When 1 (true), this unit will be ignored by Juggernaut's Omnislash ability.",
  "IsAncient": "When 1 (true), this unit will be considered an Ancient creep, granting it immunity to being targeted or affected by certain abilities.",
  "IsNeutralUnitType": "When 1 (true), this unit will be considered a neutral creep in terms of ability targeting and experience sharing. This does not automatically move it to the Neutrals' team, or grant it neutral camp spawn behaviors like sleeping at night.",
  "IsObsolete": "When 1 (true), marks this item as obsolete, removing it from the in-game shop and its search function. This does not prevent the item from being purchased entirely, as it will still show up as an upgrade path or component for any non-obsolete items if relevant, so this field's usage is not recommended.",
  "IsOnCastBar": "When 1 (true), will cause this ability to be shown on the enemy cast bar UI. Only relevant when editing some Valve-made custom games, such as frostivus and underhollow.",
  "IsOther": "When 1 (true), this unit will be affected by abilities with DOTA_UNIT_TARGET_OTHER targeting.",
  "IsRoshan": "When 1 (true), this unit will follow the same targeting rules as Roshan, meaning it will not be affected or targetable by certain abilities.",
  "IsSummoned": "When 1 (true), this unit will be considered a summon, causing it to behave differently when targeted or affected by certain abilities.",
  "IsTempestDoubleClonable": "When 0 (false), will prevent this item from being present in Arc Warden's Tempest Double inventory. This is 1 (true) for most items by default.",
  "ItemAlertable": "When 1 (true), alt-clicking this item will send a message to the player's allies asking them to gather together for its use.",
  "ItemAliases": "Any strings included in this field, separated by a semicolon, will also be recognized as this item's 'name' when searching for it in the shop. e.g. 'rapier;divine;322'",
  "ItemBaseLevel": "Used on items with multiple 'levels', such as Dagon or Necronomicon. Set the proper level (1, 2, 3 etc.) on this field for each item, and their tooltips will automatically include the full item chain's parameters (e.g. DAMAGE: 400/500/600/700/800) instead of only the parameters for the current level of the item (e.g. DAMAGE: 400).",
  "ItemCastOnPickup": "When 1 (true), causes this item to automatically and forcibly be cast when picked up. Normally used for consumable pickups like bags of gold.",
  "ItemContributesToNetWorthWhenDropped": "When 1 (true), causes this item's price to be added to the net worth of its owner, even when it is dropped. Normally 0 (false) for most items. Keep in mind items like Divine Rapier actually change owners when being picked up in certain conditions, causing their net worth to be transfered to their new owner.",
  "ItemCost": "Specifies this item's cost. If the item is not a basic component, but instead obtained by a combination of other items, then this field is ignored, and the sum of the item's components is always used instead.",
  "ItemDeclarations": "Specifies whether this item's purchase is announced to spectators (DECLARE_PURCHASES_TO_SPECTATORS) or allies (DECLARE_PURCHASES_TO_TEAMMATES) via the in-game toast notification system (usually on the right side of the screen).",
  "ItemDisassembleRule": "Specifies if this item is always disassemblable (DOTA_ITEM_DISASSEMBLE_ALWAYS), or not (DOTA_ITEM_DISASSEMBLE_NEVER). This does not prevent the item from being disassembled during the 10-second grace period after it is bought.",
  "ItemDisplayCharges": "Specifies if this item shows a charge count on its inventory slot. Examples of this behavior include tangos, mangos, or Bloodstone. This does not make the item a consumable or give it any special properties; the charges' functionallity and behavior still has to be specified.",
  "ItemDroppable": "When 0 (false), makes this item impossible to drop after being picked up, like an Aegis of the Immortal. This is 1 (true) for most items by default.",
  "ItemHideCharges": "When 1 (true), hides this item's charge count, even if it has charges. Used when mechanics are being kept track of by using item charges, but the player should not see those charges on the UI.",
  "ItemInitialCharges": "Specifies this item's initial amount of charges, when first bought or picked up.",
  "ItemInitiallySellable": "Used as 1 (true) in conjunction with ItemSellable 0 (false) in order to make this item normally unsellable, but still sellable during the 10-second grace period after it is bought from the shop.",
  "ItemInitialStockTime": "Specifies the amount of time, in seconds, that it takes for this item to become available in the shop. Time starts counting right after the picking phase ends, not only when the horn sounds, meaning you should usually add the pre-game time to your desired value.",
  "ItemIsNeutralDrop": "When 1 (true), causes this item to be considered a neutral drop, meaning it will occupy the neutral item slot instead of a regular inventory slot.",
  "ItemKillable": "When 0 (false), causes this item to be impossible to attack or destroy when dropped on the ground. This is 1 (true) for most items by default.",
  "ItemPermanent": "When 0 (false), causes this item to be considered a consumable, meaning it will automatically be destroyed when it runs out of charges. This is 1 (true) for most items by default.",
  "ItemPurchasable": "When 0 (false), will cause this item to not be purchasable from the shop, meaning it has to be obtained from some other source. This is 1 (true) for most items by default.",
  "ItemRecipe": "When 1 (true), means this item is a recipe, meaning it grants no stats and is only used for combining into another item. Recipes with 0 gold cost are not shown as a purchasable item in the shop, but still dictate the components for their resulting item.",
  "ItemRequirements": "Specifies which items are used as components for this recipe. The components should be separated by a semicolon (;).",
  "ItemRequiresCharges": "When 1 (true), will cause this item 's active ability to be unusable unless it has at least 1 charge. Does not automatically use charges on cast; this behavior has to be added to the item's active ability code.",
  "ItemResult": "Specifies which item results when this recipe's components are successfully colected.",
  "ItemSellable": "When 0 (false), causes this item to be impossible to sell. This is 1 (true) for most items by default.",
  "ItemShareability": "Specifies if this item can be fully shared with its owner's allies. Allows ITEM_FULLY_SHAREABLE, ITEM_FULLY_SHAREABLE_STACKING (full sharing and also combines stacks of the same item from different owners), and ITEM_PARTIALLY_SHAREABLE (bottle behavior - not shareable when filled with a rune). Most items are ITEM_NOT_SHAREABLE by default.",
  "ItemShopTags": "Makes this item show up on shop searches using the specified terms. Only works for a few generic terms such as 'damage' and 'armor'. Tags are separated by semicolons (;).",
  "ItemStackable": "When 1 (true), will allow this item to 'stack' with itself. This adds all charges of the item to a single inventory slot, instead of keeping them separate. This behavior only adds item charges together, and has no effect on an item's granted stats or other effects.",
  "ItemStackableMax": "Specifies a maximum limit to this item's stacking. For most items, this field is not specified, meaning they have no stack limit.",
  "ItemStockInitial": "Specifies the initial amount of purchasable copies of this item when it first becomes available for purchase. For most items this is unspecified, resulting in no purchase limit. Shop stock is always calculated individually for each team.",
  "ItemStockMax": "Specifies the maximum stock this item can stack up to in the shop. Any stock beyond this cap will be wasted. For most items this is unspecified, resulting in no maximum stock limit.",
  "ItemStockTime": "Specifies the amount of time, in seconds, it takes for this item's stock in the shop to increase by one. Calculated after ItemInitialStockTime has elapsed. Only applicable to items with a limited stock.",
  "Level": "Specifies this creep's base level. Creep levels can affect the way they are affected by some abilities. Creeps can also gain stats based on their level, when using the 'creature' block in their definition. These stats are only gained when the creep's level is greater than its base level.",
  "LevelsBetweenUpgrades": "Specifies the amount of levels a hero must gain beyond RequiredLevel in order to further upgrade this ability by one level. This value is cumulative, meaning in order to level an ability to level e.g. 3, a hero must be at least level RequiredLevel + 2 * LevelsBetweenUpgrades. Defaults to 2 if not specified otherwise.",
  "LinkedAbility": "Specifies an ability to become linked to this one. Leveling either of the linked abilities will automatically also level the other, without spending a skill point. Needs to be specified on both abilities to form a true two-way link.",
  "LoadoutScale": "Specifies the size of this hero's model on the default picking screen's loadout section.",
  "MagicalResistance": "Specifies this unit's base magic resistance. Expressed as a raw percentage, e.g. 50 means 50% magic resistance.",
  "MaxLevel": "The maximum level this ability can be upgraded to. If not specified, defaults to 3 for ultimate (DOTA_ABILITY_TYPE_ULTIMATE) abilities, or 4 otherwise. The regular UI supports leveling indicators (pips) for abilities with 1, 3, 4, or 7 levels, anything else will not look great. AbilitySpecial values will start breaking for abilities with high maximum levels, possibly causing crashes. Anything up to level ~20 is still safe.",
  "MaxModelScaleMultiplier": "Limits this unit's model scale to the specified amount, preventing it from growing any larger.",
  "MaxUpgradeLevel": "Specifies the highest level this item can be upgraded to. For upgradable items like Necronomicon 1/2/3 or Dagon 1-5.",
  "MinimapIcon": "Specifies this unit's minimap icon.",
  "MinimapIconSize": "Specifies the size of this unit's minimap icon. Usually in the 150-400 range.",
  "Model": "Specifies this unit, hero, or item's model, its base appearance. For items, defaults to the red item 'treasure chest' if no model is specified. Regular units using hero models will not include the hero's cosmetics. Heroes will automatically spawn cosmetics based on their HeroID and their owning player.",
  "ModelScale": "Specifies this unit's model size. higher number results in a larger unit. 1.0 represents the model's default size.",
  "MovementCapabilities": "Specifies this unit's movement capability. DOTA_UNIT_CAP_MOVE_NONE = stationary, DOTA_UNIT_CAP_MOVE_GROUND = regular movement, DOTA_UNIT_CAP_MOVE_FLY = flying movement, meaning the unit floats slightly above the ground and ignores terrain.",
  "MovementSpeed": "Specifies this unit's base movement speed. The unit's actual movement speed is usually capped at a minimum of 100 and maximum of 550, so using values outside those values will not produce the desired results, unless additional logic is built. Those values are not entirely useless, however - a unit with e.g. 1000 base movement speed would move at only 550 speed, but if it was affected by a 50% slow, it would still move at a speed of 500, as the slow is applied on the unit's base movement value, not the final one.",
  "MovementSpeedActivityModifiers": "Lists a series of animation modifiers, automatically used whenever the unit's movement speed exceeds the listed values. e.g. 'walk' '0', 'run' '350' would cause a unit's movement animation to use the 'run' modifier when it has over 350 move speed, and the 'walk' modifier in any other situation.",
  "MovementTurnRate": "A measure of how fast this unit can turn (change their yaw), expressed in radians per 0.03 second. A unit with the maximum turn rate (1.0) can perform a 180 degree turn in roughly 0.1 second, while a unit with half that turn rate woudl take twice as long. Most heroes and units have a turn rate of 0.5.",
  "NameAliases": "Any strings in this field will also be considered valid when attempting to filter heroes in the default pick screen by typing their names. Aliases should be separated by semicolons (;). Examples: 'pl' or 'sf' for Phantom Lancer and Shadow Fiend, respectively.",
  "particle_folder": "The folder containing this hero's particles, which should be loaded when it is spawned. Prefer using proper precaching, as this field is unreliable at best.",
  "PathfindingSearchDepthScale": "Limits this unit's pathfinding search depth. This results in faster, but but lower quality, pathfinding for it. Expressed as a normalized multiple (0-1) of the default search depth. Use this when spawning a large amount of units, in order to help reduce lag.",
  "PingOverrideText": "Specifies a localizable string which is displayed when pinging this item, instead of the usual 'gather here for [item]'. No effect if unspecified.",
  "precache": "Specifies some resources that should be precached when an unit with this ability is spawned. Prefer using proper precaching, as this field can be unreliable.",
  "ProjectileModel": "Specifies which particle is used for this unit's attacks. Only relevant for units capable of ranged attacks. Requires a particle compatible with being used as a tracking projectile.",
  "ProjectileSpeed": "Specifies the speed at which this unit's ranged attack projectiles travel. Must be greater than zero, or the unit's attacks will never hit their targets. Melee attacks don't use this value, and are instead instant. Many heroes have values around 900 for this field, but it features a lot of variability.",
  "RenderablePortrait": "Specifies some information regarding this unit's portrait, such as adding particle effects to it, and others.",
  "RequiredLevel": "The minimum level a hero must reach to learn this ability for the first time. If not specified, defaults to 6 for ultimate (DOTA_ABILITY_TYPE_ULTIMATE) abilities, or 1 otherwise.",
  "RingRadius": "Specifies the radius of this unit's selection circle, the green circle that is drawn at its feet when the player selects it. Changing this field does not change the unit's actual collision radius.",
  "ScriptFile": "Specifies the path to this ability's lua script file. Essential when creating custom abilities. Uses the relative path starting at the vscripts folder, and requires no file extension, e.g. 'abilities/my_ability'.",
  "SecretShop": "When 1 (true), causes this item to require secret shop access to purchase. Ignored on global shop mode. Automatically adds a secret shop symbol on the item's tooltip.",
  "SelectionGroup": "Specifies a selection group for this unit, such as 'venomancer_wards' or 'shaman_wards'. This causes all units with the same selection group to be considered the same unit when double-clicking one of them to select all nearby units.",
  "ShouldBeInitiallySuggested": "When 1 (true), adds this item to the list of purchasable items in the strategy phase of the default picking screen.",
  "ShouldBeSuggested": "When 0 (false), prevents this item from showing up in the shop's guides tab. This is mostly a hacky way for valve to remove their old/removed items from this section of the shop.",
  "SideShop": "When 1 (true), causes this item to become available in the side shops. Though the default Dota map no longer uses side shops, you can still create and use them in your own maps.",
  "SoundSet": "Specifies this unit's sound set. This automatically causes it to use the appropriate moving, attacking, and ambient sounds, as long as they are properly defined in the referenced file.",
  "SpellDispellableType": "When specified, automatically includes dispel information on this ability's tooltip, with the proper formatting. Accepts SPELL_DISPELLABLE_YES_STRONG for strong dispels, and SPELL_DISPELLABLE_YES for normal dispels.",
  "SpellImmunityType": "When specified, automatically includes information about spell immunity interactions on this ability's tooltip, with the proper formatting. Accepts SPELL_IMMUNITY_ALLIES_YES, SPELL_IMMUNITY_ALLIES_NO, SPELL_IMMUNITY_ENEMIES_YES, and SPELL_IMMUNITY_ENEMIES_NO.",
  "StatusHealth": "Specifies this unit's base health. Units with 0 or negative health die as soon as they spawn.",
  "StatusHealthRegen": "Specifies this unit's base health regeneration per second.",
  "StatusMana": "Specifies this unit's base mana. Units with 0 mana are not targeted by the DOTA_UNIT_TARGET_FLAG_MANA_ONLY targeting flag.",
  "StatusManaRegen": "Specifies this unit's base mana regenration per second.",
  "StatusStartingMana": "If specified, causes this unit to have this amount of mana or its maximum mana when it spawns, whichever is lower. When unspecified, defaults to spawning the unit with full mana.",
  "UIDropSound": "The sound that plays when this item is dropped to the ground from the shop stash.",
  "WorldDropSound": "The sound that plays when this item is dropped to the ground from a player inventory.",
  "UIPickupSound": "The sound that plays when this item is picked up from the ground.",
  "UnitLabel": "A localizable string which overrides this unit's name, and will show up on top of their portrait as their actual name. Useful for multiple units which share the same name, e.g. all 4 levels of Plague Wards.",
  "UnitRelationshipClass": "Can be set to DOTA_NPC_UNIT_RELATIONSHIP_TYPE_WARD to cause this unit to behave as a ward-type unit, or DOTA_NPC_UNIT_RELATIONSHIP_TYPE_BUILDING to cause it to behave as a building. This does not include ability targeting. Most units use the default DOTA_NPC_UNIT_RELATIONSHIP_TYPE_DEFAULT,",
  "UpgradeRecipe": "Specifies the recipe used to upgrade this item. Only relevant for upgradable items such as Necronomicon 1/2/3 or Dagon 1-5. Causes the shop interface to properly 'understand' the same recipe is used in all the levels of the item.",
  "UpgradesItems": "Specifies the other items in this item upgrade chain. See examples for proper usage, as this field can be a bit confusing at first.",
  "VersusScale": "Specifies the size of this hero's model on the 'versus' section of valve's default picking screen.",
  "VisionDaytimeRange": "Specifies the base distance this unit can see during daytime.",
  "VisionNighttimeRange": "Specifies the base distance this unit can see during nighttime.",
  "VoiceFile": "Specifies this hero's voice lines file.",
  "vscripts": "Links the given script file to this unit, causing it to run whenever a unit of this type spawns.",
  "WakesNeutrals": "When 0 (false), causes this unit to not disturb or wake up neutrals. Used for some non-combat units such as Beastmaster's Hawk.",
  "workshop_guide_name": "Specifies this hero's name on the workshop guides section.",
  "AbilityCastGestureSlot": "Can be DEFAULT or ABSOLUTE. No idea what that does.",
  "AbilitySound": "Ability's most representative/primary sound effect. Has no effect in custom games. You can ignore this field.",
  "AttackDamageType": "This field should specify a unit's damage type, but currently it has no perceivable effect on anything. Most units have DAMAGE_TYPE_ArmorPhysical as a default value.",
  "AbilityName": "Unknown usage.",
  "AbilityPreview": "Unknown usage.",
  "ActiveDescriptionLine": "Unknown usage.",
  "AlternateLoadoutScale": "Unknown usage.",
  "animation_transitions": "Unknown usage.",
  "AnimationModifier": "Unknown usage.",
  "IdleExpression": "Unknown usage.",
  "IsBoss": "Unknown usage.",
  "IsBossMonster": "Unknown usage.",
  "ItemCombinable": "Unknown usage.",
  "ItemDeclaresPurchase": "Unknown usage.",
  "ItemGloballyCombinable": "Unknown usage.",
  "Modifiers": "Unknown usage.",
  "NewHero": "Unknown usage.",
  "NoCombine": "Unknown usage.",
  "Portrait": "Unknown usage.",
  "Press": "Unknown usage.",
  "OnCastbar": "Unknown usage. Probably deprecated.",
  "OnLearnbar": "Unknown usage. Probably deprecated.",
  "ModelAlternate": "Only used for Bottle. Unknown use otherwise.",
  "HUD": "Unknown usage. Does not affect custom games. You can ignore this field.",
  "Effect": "Unknown context or usage.",
  "GlobalShop": "Unknown context or usage.",
  "override_hero": "Unknown context or usage.",
  "HeroGlowColor": "I'm not sure if this affects anything.",
  "ItemQuality": "I'm not sure if this affects anything.",
  "ProjectileCollisionSize": "I'm not sure if this affects anything.",
  "BonusDelayedStockCount": "This is used on Tome of Knowledge, but I'm not aware of its purpose.",
  "BotForceSelection": "Only used in one hero (Lina), and I'm not aware of its purpose. Only useful when dealing with vanilla AI scripts.",
  "DisableDamageDisplay": "Specifies whether the default damage number particles are turned off when this unit deals or takes damage. I'm not sure if this property is working.",
  "HotKeyOverride": "Specifies the legacy keyboard shortcut for Invoker's abilities. It's unknown if this has any effect on other abilities.",
  "IsGrantedByScepter": "When 1 (true), marks this ability as being granted by aghanim's scepter. I'm unsure what exactly this field does (is it for ability draft, for tooltips, or something else?)",
  "SelectOnSpawn": "Unknown usage.",
  "skin": "Used only on Sentry Wards, for unknown reasons.",
  "VisbibleInPortraitOnly": "Unknown usage.",
  "VoiceBackgroundSound": "Unknown usage.",
  "AbilityLayout": "Deprecated field.",
  "ItemDisassemblable": "Deprecated field.",
  "DisplayAdditionalHeroes": "Deprecated field.",
  "IsCastableWhileHidden": "Deprecated field.",
  "AbilityDraftAbilities": "Only applies to Ability Draft, and has no effect in custom games. You can ignore this field.",
  "AbilityDraftDisabled": "Only applies to Ability Draft, and has no effect in custom games. You can ignore this field.",
  "AbilityDraftIgnoreCount": "Only applies to Ability Draft, and has no effect in custom games. You can ignore this field.",
  "AbilityDraftPreAbility": "Only applies to Ability Draft, and has no effect in custom games. You can ignore this field.",
  "AbilityDraftUltScepterAbility": "Only applies to Ability Draft, and has no effect in custom games. You can ignore this field.",
  "AbilityDraftUltScepterPreAbility": "Only applies to Ability Draft, and has no effect in custom games. You can ignore this field.",
  "AbilityDraftUniqueAbilities": "Only applies to Ability Draft, and has no effect in custom games. You can ignore this field.",
  "ItemSlots": "Used by Valve for some data about hero cosmetics and their equippable slots. Has no effect in custom games. You can ignore this field.",
  "BanSound": "Specifies the sound played when a hero is banned in Captain's Mode, and has no effect in custom games. You can ignore this field.",
  "HeroSelectSoundEffect": "Specifies the announcer line that plays when a hero is picked, and has no effect in custom games. You can ignore this field.",
  "PickSound": "Specifies the sound played when a hero is picked in Captain's Mode, and has no effect in custom games. You can ignore this field.",
  "CMEnabled": "Specifies if a hero is enabled in Captain's Mode, and has no effect in custom games. You can ignore this field.",
  "CMTournamentIgnore": "Specifies if a hero is enabled in Tournament Captain's Mode lobbies, and has no effect in custom games. You can ignore this field.",
  "ARDMDisabled": "Only applies to All Random Deathmatch mode, and has no effect in custom games. You can ignore this field.",
  "new_player_enable": "When 1 (true), allows this hero to be picked in the Limited Heroes game mode. Has no effect in custom games. You can ignore this field.",
  "Enabled": "Whether a hero is enabled in vanilla All Pick. Does not affect custom games - use herolist.txt instead.",
  "EventID": "Specifies which seasonal event an ability belongs to. Used by Valve, and has no effect in custom games. You can ignore this field.",
  "PlayerSpecificCooldown": "Used for tracking the cooldown of some seasonal, cosmetic abilities or items. Has no effect in custom games. You can ignore this field.",
  "FightRecapLevel": "Specifies the degree of importance this ability should have on the Fight Recap observer/replay tool. Has no effect in custom games. You can ignore this field.",
  "HeroPool1": "Specifies whether this hero can be selected during some stages of the new player experience. Has no effect in custom games. You can ignore this field.",
  "HeroPool2": "Specifies whether this hero can be selected during some stages of the new player experience. Has no effect in custom games. You can ignore this field.",
  "HeroUnlockOrder": "Specifies at which point this hero is unlocked during the new player experience. Has no effect in custom games. You can ignore this field.",
  "RunAIWhenControllableByPlayer": "Unknown exact usage, related to the Year Beast event. Has no effect in custom games. You can ignore this field.",
  "ItemSupport": "When 1 (true), flags this item as a 'support' item, meaning it counts for the 'gold spent on support items' tally at the end-of-game stats screen. Has no effect in custom games. You can ignore this field.",
  "GibTintColor": "Specifies the color of the 'blood' spatters from this hero when being Dismembered by the Pudge arcana. Has no effect in custom games. You can ignore this field.",
  "GibType": "Specifies the type of 'blood' that should spatter from thie hero when being Dismembered by the Pudge arcana (actual blood, cogs, ice, sparkles, etc). Has no effect in custom games. You can ignore this field.",
  "Persona": "Contains Persona information for this hero. Has no effect in custom games. You can ignore this field.",
  "LastHitChallengeRival": "Specifies which hero spawns as this hero's 'rival' in the new player experience's last hit challenge. Has no effect in custom games. You can ignore this field.",
  "Legs": "Specifies how many legs this hero has. Related to some old Valve quests, stat collection, and memes. Has no effect in custom games. You can ignore this field.",
  "ReleaseTimestamp": "Specifies when this hero was released. Has no effect in custom games. You can ignore this field.",
  "AssociatedConsumable": "This is used by Valve when dealing with seasonal abilities tied to consumables. You can ignore this field.",
  "AbilityModifierSupportBonus": "This affects some internal Valve ability data collection stuff, and has no effect in custom games. You can ignore this field.",
  "AbilityModifierSupportValue": "This affects some internal Valve ability data collection stuff, and has no effect in custom games. You can ignore this field.",
  "OverrideWearableClass": "Unknown context or usage, but related to Valve's cosmetics system. You can ignore this field.",
  "Role": "Specifies which roles the hero can perform in during bot matches. Only useful when dealing with vanilla AI scripts.",
  "Rolelevels": "Specifies how well the hero can roughly perform in each role during bot matches. Only useful when dealing with vanilla AI scripts.",
  "LimitPathingSearchDepth": "Deprecated, use PathfindingSearchDepthScale instead.",
  "SpectatorLoadoutScale": "Specifies a hero's model size on the Captain's Mode pick stage for spectators. Has no effect in custom games. You can ignore this field.",
  "Team": "Whether this hero is aligned to the Radiant ('good') or Dire ('bad'). This currently serves no purpose.",
  "TeamName": "This unit's default team. In practical terms, you will always specify a team for the unit to belong to when being spawned, making this field essentially useless.",
  "UnlockMaxEffectIndex": "Some Valve seasonal event data with unknown purpose. You can ignore this field.",
  "UnlockMinEffectIndex": "Some Valve seasonal event data with unknown purpose. You can ignore this field.",
  "UseNeutralCreepBehavior": "Used to prevent some undesirable behaviors in Lycan's old aghs lane-spawning wolves. You can ignore this field.",
  "wearable": "Specifies which cosmetic item this unit is linked to. Has no effect in custom games. You can ignore this field.",
}